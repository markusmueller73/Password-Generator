;  * PASSWORD GENERATOR;  *;  * main_window.pbi;  *;--------------------------------------------------------------------------------;--------------------------------------------------------------------------------;- constantsEnumeration Window  #WND_MAIN  #WND_ABOUTEndEnumerationEnumeration Menu  #MNU_MAIN  CompilerIf #PB_Compiler_OS = #PB_OS_MacOS    #FILE_PREFS = #PB_Menu_Preferences    #FILE_QUIT = #PB_Menu_Quit    #HELP_ABOUT = #PB_Menu_About  CompilerElse    #FILE_PREFS    #FILE_QUIT    #HELP_ABOUT  CompilerEndIfEndEnumerationEnumeration Gadgets  #IMG_PASSWORD  #FRM_SETTINGS  #TXT_LENGTH  #SPN_LENGTH  #CHK_UPPER_CHARS  #CHK_LOWER_CHARS  #CHK_NUMBERS  #CHK_SPECIAL_SIGNS  #CHK_SIMPLE_SPECIAL_SIGNS  #BTN_GENERATE  #BTN_COPYEndEnumeration;--------------------------------------------------------------------------------;- macrosMacro _set_spin_value ( gadget , value = 0 )  SetGadgetText(gadget, Str(value))  SetGadgetState(gadget, value)EndMacroMacro _get_spin_value( gadget )  ( Val(GetGadgetText(gadget)) )EndMacro;--------------------------------------------------------------------------------;- functionsProcedure main_window_open ()    If OpenWindow(#WND_MAIN, #PB_Ignore, #PB_Ignore, 400, 420, #APP_TITLE, #PB_Window_SystemMenu|#PB_Window_Invisible)        If CreateMenu(#MNU_MAIN, WindowID(#WND_MAIN))      MenuTitle("File")      MenuItem(#FILE_PREFS, "Preferences")      MenuBar()      MenuItem(#FILE_QUIT, "Quit" + Space(1) + #APP_TITLE)      MenuTitle("Help")      MenuItem(#HELP_ABOUT, "About" + Space(1) + #APP_TITLE)    Else      warn("Can't create window menu.")      ProcedureReturn 0    EndIf        ImageGadget(#IMG_PASSWORD, 10, 10, 380, 120, 0)        FrameGadget(#FRM_SETTINGS, 10, 140, 380, 200, "Password settings:")        TextGadget(#TXT_LENGTH,  20, 180, 160, 25, "Password length:")    SpinGadget(#SPN_LENGTH, 200, 170, 80, 30, 0, 128, #PB_Spin_Numeric)        CheckBoxGadget(#CHK_UPPER_CHARS,           20, 220, 160, 25, "Contain upper chars?")    CheckBoxGadget(#CHK_LOWER_CHARS,          200, 220, 160, 25, "Contain lower chars?")    CheckBoxGadget(#CHK_NUMBERS,               20, 260, 160, 25, "Contain numbers?")    CheckBoxGadget(#CHK_SPECIAL_SIGNS,        200, 260, 160, 25, "Contain special chars?")    CheckBoxGadget(#CHK_SIMPLE_SPECIAL_SIGNS, 200, 300, 160, 25, "Only regular special chars?")        ButtonGadget(#BTN_GENERATE, 120, 355, 160, 35, "Generate Password")        _set_spin_value(#SPN_LENGTH, 16)        SetGadgetState(#CHK_UPPER_CHARS, #True)    SetGadgetState(#CHK_LOWER_CHARS, #True)    SetGadgetState(#CHK_NUMBERS, #True)        SetGadgetState(#CHK_SIMPLE_SPECIAL_SIGNS, #True)    DisableGadget(#CHK_SIMPLE_SPECIAL_SIGNS, #True)        HideWindow(#WND_MAIN, 0)      Else    warn("Can't open main window.")    ProcedureReturn 0  EndIf    ProcedureReturn 1  EndProcedure; IDE Options = PureBasic 5.71 LTS (MacOS X - x64); CursorPosition = 38; FirstLine = 28; Folding = -; EnableXP; UseMainFile = main.pb; EnablePurifier; EnableCompileCount = 0; EnableBuildCount = 0; EnableExeConstant